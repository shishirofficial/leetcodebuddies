class TwoSum {
public:
    /** Initialize your data structure here. */
    vector<long long int> v;
    unordered_map<int,int> mp;
    TwoSum() 
    {
        
    }
    
    /** Add the number to an internal data structure.. */
    
    void add(long long int number)
    {
       v.push_back(number);
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    bool find(int value) 
    {
        mp.clear();
        for(int i=0;i<v.size();i++)
        {
            long long int com=value-v[i];
            if(mp.find(com)!=mp.end())
            {
                return true;
            }
            else
            {
                mp.insert({v[i],i});
            }
        }
        
        return false;
    }
};

.............................................................................................

class TwoSum {
public:
    /** Initialize your data structure here. */\
    vector<int> v;
    TwoSum() {
        
    }
    
    /** Add the number to an internal data structure.. */
    void add(int number) {
        v.push_back(number);
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    bool find(int value) 
    {
        sort(v.begin(),v.end());
        int beg=0;
        int last=v.size()-1;
        while(beg < last)
        {
            int sum=v[beg]+v[last];
            if(sum==value)
            {
                return true;
            }
            else if(sum < value)
            {
                beg++;
            }
            else
            {
                last--;
            }
        }
       return false; 
    }
};
