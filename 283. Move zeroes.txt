class Solution {
public:
    void moveZeroes(vector<int>& nums)
    {
        int n=nums.size();
        int i=0;
        int j=1;
        while(i < n && j < n)
        {
            if(nums[i] == 0 && nums[j] != 0)
            {
                swap(nums[i],nums[j]);
                i++;
                j++;
                continue;
            }
            else if(nums[i] == 0 && nums[j] == 0)
            {
                j++;
                continue;
            }
            else
            {
                i++;
                j++;
                continue;
            }
        }
    }
};

..................................................................................
class Solution {
public:
    void moveZeroes(vector<int>& nums) 
    {
        int n=nums.size();
        
        vector<int> temp(n,0);
        int a=0;
        for(int i=0;i<n;i++)
        {
            if(nums[i] != 0)
            {
                temp[a++]=nums[i];
            }
        }
        nums=temp;
        
    }
};

........................................................

logo
Explore
Problems
Interview
Contest
Discuss
Store
ðŸš€ June LeetCoding Challenge 2021 ðŸš€
0
Description
Solution
Discuss (999+)
Submissions
Success
Details 
Runtime: 4 ms, faster than 90.39% of C++ online submissions for Move Zeroes.
Memory Usage: 8.9 MB, less than 56.10% of C++ online submissions for Move Zeroes.
Next challenges:
Sum of Even Numbers After Queries
Maximum Side Length of a Square with Sum Less than or Equal to Threshold
Check if Array Is Sorted and Rotated
Show off your acceptance:
Time Submitted
Status
Runtime
Memory
Language
06/09/2021 23:33	Accepted	4 ms	8.9 MB	cpp
06/09/2021 23:33	Wrong Answer	N/A	N/A	cpp
06/09/2021 07:35	Accepted	4 ms	8.9 MB	cpp
06/09/2021 07:35	Accepted	4 ms	8.9 MB	cpp
06/09/2021 07:34	Time Limit Exceeded	N/A	N/A	cpp
06/09/2021 07:10	Accepted	4 ms	8.9 MB	cpp
01/26/2021 22:30	Accepted	4 ms	9.1 MB	cpp

Problems

Pick One

Prev
/40

Next

Autocomplete





1
class Solution {
2
public:
3
    void moveZeroes(vector<int>& nums)
4
    {
5
        for(int longe=0, curr=0;curr < nums.size(); curr++)
6
        {
7
            if(nums[curr] != 0)
8
            {
9
                swap(nums[longe++],nums[curr]);
10
            }
11
            
12
        }
13
    }
14
};
Testcase
Run Code Result
Debugger
Accepted
Runtime: 0 ms
Your input
[0,1,0,3,12]
Output
[1,3,12,0,0]
Expected
[1,3,12,0,0]
Console 
Use Example Testcases

Run Code

Submit
Type here...(Markdown is enabled)
â€‹
Saved
search problems



Todo
Medium
Two Pointers
This list is empty.