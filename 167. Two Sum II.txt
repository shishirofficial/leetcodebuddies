Naive Approach:

Brute Force T.L.E
two loops basic solution

....................................

Efficient Solution:
Hash Approach is also not working complement wali

......................................

Two Pointer Approach
vector<int> twoSum(vector<int>& numbers, int target) 
    {
        int beg=0;
        int last=numbers.size()-1;
        vector<int> ans;
        while(beg < last)
        {
            int sum=numbers[beg]+numbers[last];
            if(sum==target)
            {
               ans.push_back(beg+1);
               ans.push_back(last+1);
               return ans;
            }
            else if(sum<target)
            {
                beg++;
            }
            else
            {
                last--;   
            }
        }
        return ans;
    }

.........................................................................
